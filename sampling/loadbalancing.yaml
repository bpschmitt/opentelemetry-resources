apiVersion: v1
kind: Namespace
metadata:
  name: observability
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: loadbalancer-role
  namespace: test
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - list
  - watch
  - get
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: loadbalancer
  namespace: test
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: loadbalancer-rolebinding
  namespace: test
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: loadbalancer-role
subjects:
- kind: ServiceAccount
  name: loadbalancer
  namespace: test
---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: loadbalancer
  namespace: test
spec:
  image: docker.io/otel/opentelemetry-collector-contrib:latest
  serviceAccount: loadbalancer
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:

    processors:

    connectors:
      spanmetrics/default:

    exporters:
      debug:
      otlp:
        endpoint: "otlp.nr-data.net:4317"
        tls:
          insecure: false
        headers:
          api-key: ${NEW_RELIC_LICENSE_KEY}
      loadbalancing:
        protocol:
          otlp:
            tls:
              insecure: true
        resolver:
          k8s:
            service: backends-collector-headless.test

    service:
      pipelines:
        traces:
          receivers:
            - otlp
          processors: []
          exporters:
            - loadbalancing
            - spanmetrics/default
            - debug
        metrics:
          receivers:
            - otlp
            - spanmetrics/default
          processors: []
          exporters:
            - otlp
            - debug

        # traces:
        #   receivers: [otlp]
        #   processors:
        #     [memory_limiter, resource, resourcedetection, k8sattributes, batch]
        #   exporters: [spanmetrics, otlp]
        # metrics:
        #   receivers: [spanmetrics, hostmetrics, otlp]
        #   processors:
        #     [
        #       memory_limiter,
        #       resource,
        #       resourcedetection,
        #       k8sattributes,
        #       cumulativetodelta,
        #       batch,
        #     ]
        #   exporters: [otlp]
  env:
  - name: NEW_RELIC_LICENSE_KEY
    valueFrom:
      secretKeyRef:
        name: newrelic-license-key
        key: licensekey
---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: backends
  namespace: test
spec:
  replicas: 3
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:

    processors:
      tail_sampling:
        decision_wait: 10s
        num_traces: 1000
        expected_new_traces_per_sec: 10
        policies:
          [
            {
              name: errors-policy,
              type: status_code,
              status_code: { status_codes: [ERROR] },
            },
            # {
            #   name: randomized-policy,
            #   type: probabilistic,
            #   probabilistic: { sampling_percentage: 25 },
            # },
          ]

    exporters:
      debug:
      otlp:
        endpoint: "otlp.nr-data.net:4317"
        tls:
          insecure: false
        headers:
          api-key: ${NEW_RELIC_LICENSE_KEY}

    service:
      pipelines:
        traces:
          receivers:
            - otlp
          processors: [tail_sampling]
          exporters:
            - debug
            - otlp
  env:
  - name: NEW_RELIC_LICENSE_KEY
    valueFrom:
      secretKeyRef:
        name: newrelic-license-key
        key: licensekey
        